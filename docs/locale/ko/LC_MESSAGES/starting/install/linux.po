#
msgid ""
msgstr ""
"Project-Id-Version: pythonguide 0.0.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2016-11-17 01:45+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: YoungSeon.Ahn <lovemewithoutall@gmail.com>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.3.4\n"

#: ../../starting/install/linux.rst:4
msgid "Installing Python on Linux"
msgstr "리눅스에 파이썬 설치하기"

#: ../../starting/install/linux.rst:6
msgid ""
"The latest versions of CentOS, Fedora, Redhat Enterprise (RHEL) and "
"Ubuntu **come with Python 2.7 out of the box**."
msgstr "최신 버전의 CentOS, 페도라, 레드햇 엔터프라이즈(RHEL), 그리고 우분투는 **파이썬 2.7이 딸려옵니다. 멋지죠. ** "

#: ../../starting/install/linux.rst:9
msgid ""
"To see which version of Python you have installed, open a command prompt "
"and run"
msgstr "어느 버전의 파이썬이 설치되어 있는지 확인하려면, 명령창을 열고 아래의 스크립트를 실행하세요. "

#: ../../starting/install/linux.rst:15
msgid ""
"Some older versions of RHEL and CentOS come with Python 2.4 which is "
"unacceptable for modern Python development. Fortunately, there are `Extra"
" Packages for Enterprise Linux`_ which include high quality additional "
"packages based on their Fedora counterparts. This repository contains a "
"Python 2.6 package specifically designed to install side-by-side with the"
" system's Python 2.4 installation."
msgstr ""
"몇몇 오래된 버전의 RHEL와 CentOS에는 파이썬 2.4가 딸려오는데, 이 버전은 요즘의 파이썬 개발에는 적당하지 않습니다. "
"다행히도 `Extra Packages for Enterprise Linux`가 있습니다. 여기에는 페도라에 대응하는 훌륭한 추가 "
"패키지가 들어있는데, 파이썬 2.4가 설치된 시스템에서도 2.4버전과 2.6버전이 병행하여 설치될 수 있도록 특별히 만들어진 파이썬"
" 2.6 패키지를 포함하고 있습니다. "

#: ../../starting/install/linux.rst:24
msgid ""
"You do not need to install or configure anything else to use Python. "
"Having said that, I would strongly recommend that you install the tools "
"and libraries described in the next section before you start building "
"Python applications for real-world use. In particular, you should always "
"install Setuptools and pip, as it makes it much easier for you to use "
"other third-party Python libraries."
msgstr ""
"파이썬을 사용하기 위해 달리 설치하거나 설정을 할 필요는 없습니다. 그렇기는 해도 실제로 사용할 파이썬 어플리케이션을 만들기 전에 "
"이 안내서에서 앞으로 설명할 도구와 라이브러리들을 먼저 설치할 것을 강력 추천합니다. 특히 Setuptools와 pip는 반드시 "
"설치해야 합니다. 이것들은 다른 파이썬 서드파티 라이브러리들을 사용하기 편하게 해줍니다."

#: ../../starting/install/linux.rst:31
msgid "Setuptools & Pip"
msgstr "Setuptools & Pip"

#: ../../starting/install/linux.rst:33
msgid ""
"The two most crucial third-party Python packages are `setuptools "
"<https://pypi.python.org/pypi/setuptools>`_ and `pip "
"<https://pip.pypa.io/en/stable/>`_."
msgstr ""
"가장 중요한 파이썬 서드파티 패키지를 2개 뽑으라면 `setuptools "
"<https://pypi.python.org/pypi/setuptools>`_ 와 `pip "
"<https://pip.pypa.io/en/stable/>`_ 입니다."

#: ../../starting/install/linux.rst:35
msgid ""
"Once installed, you can download, install and uninstall any compliant "
"Python software product with a single command. It also enables you to add"
" this network installation capability to your own Python software with "
"very little work."
msgstr ""
"이것들을 설치하면 단 한 줄의 명령만으로도 pip와 setuptools에 호환되는 모든 파이썬 소프트웨어를 다운로드, 설치, 삭제할"
" 수 있습니다.또한 당신이 만든 파이썬 소프트웨어에 네트워크 설치 기능을 손쉽게 추가할 수 있도록 해줍니다. "

#: ../../starting/install/linux.rst:39
msgid ""
"Python 2.7.9 and later (on the python2 series), and Python 3.4 and later "
"include pip by default."
msgstr ""
"파이썬 2.7.9와 그 이후의 버전(파이썬2 중에서), 그리고 파이썬 3.4와 그 이후의 버전은 pip를 기본적으로 포함하고 "
"있습니다. "

#: ../../starting/install/linux.rst:42
msgid "To see if pip is installed, open a command prompt and run"
msgstr "pip가 설치되어 있는지 보고 싶다면, 명령창을 열어 아래의 파이썬 스크립트를 실행하면 됩니다."

#: ../../starting/install/linux.rst:48
msgid ""
"To install pip, `follow the official pip installation guide "
"<https://pip.pypa.io/en/latest/installing/>`_ - this will automatically "
"install the latest version of setuptools."
msgstr ""
"pip를 설치하려면 `pip 공식 설치 안내서 <https://pip.pypa.io/en/latest/installing/>`_ 를"
" 따라해보세요. - 이 링크는 setuptools 최신 버전도 자동 설치해줍니다. "

#: ../../starting/install/linux.rst:51
msgid "Virtual Environments"
msgstr "Virtual Environments"

#: ../../starting/install/linux.rst:53
msgid ""
"A Virtual Environment is a tool to keep the dependencies required by "
"different projects in separate places, by creating virtual Python "
"environments for them. It solves the \"Project X depends on version 1.x "
"but, Project Y needs 4.x\" dilemma, and keeps your global site-packages "
"directory clean and manageable."
msgstr ""
"Virtual Environments은 파이썬 가상 환경을 만들어 서로 다른 파이썬 프로젝트들 간의 독립성을 유지시켜주는 툴입니다."
" 이는 \"프로젝트 X는 버전 1.x를 쓰는데, 프로젝트Y는 버전 4.x가 필요한\" 난국을 해결해줍니다. 그리고 전역 패키지 "
"디렉토리를 깨끗하게 관리할 수 있도록 해줍니다."

#: ../../starting/install/linux.rst:58
msgid ""
"For example, you can work on a project which requires Django 1.10 while "
"also maintaining a project which requires Django 1.8."
msgstr "예를 들면 장고 1.10을 쓰는 프로젝트에서 작업하면서, 동시에 장고 1.8을 사용하는 프로젝트를 유지보수 할 수 있습니다."

#: ../../starting/install/linux.rst:61
msgid ""
"To start using this and see more information: :ref:`Virtual Environments "
"<virtualenvironments-ref>` docs."
msgstr ""
"Virtual Environments을 사용하기 위해 더 많은 정보를 알고 싶다면 :ref:`Virtual Environments "
"<virtualenvironments-ref>` 문서에서 볼 수 있습니다. "

#: ../../starting/install/linux.rst:63
msgid ""
"You can also use :ref:`virtualenvwrapper <virtualenvwrapper-ref>` to make"
" it easier to manage your virtual environments."
msgstr ""
":ref:`virtualenvwrapper <virtualenvwrapper-ref>` 를 봐도 됩니다. Virtual "
"Environments를 보다 쉽게 관리할 수 있을 것입니다. "

#: ../../starting/install/linux.rst:68
msgid ""
"This page is a remixed version of `another guide "
"<http://www.stuartellis.eu/articles/python-development-windows/>`_, which"
" is available under the same license."
msgstr ""
"이 페이지는 `다른 안내서 <http://www.stuartellis.eu/articles/python-development-"
"windows/>`_ 를 풀어쓴 버전입니다. 동일한 라이선스 아래서 사용할 수 있습니다."

